#L3 VRRP eBGP
---


# This task will create vrouter on spine switches.
# It uses pn_ztp_vrouter_setup_third_party.py module from library/ directory.
# If the tasks fails then it will retry as specified by retries count.
- name: Configure vrouter
  hosts: leaf
  tags: vrouter
  serial: 1

  tasks:
    - name: Setup vrouter
      pn_ztp_vrouter_setup_third_party:
        pn_loopback_ip: "{{ pn_loopback_ip }}"                # Loopback network to confgure ipv4 loopback ips to vrouters.
        pn_current_switch: "{{ inventory_hostname }}"         # The name of the current executing switch
        pn_spine_list: "{{ groups['third_party_spine'] }}"    # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"                  # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_vrrp_id: "{{ pn_vrrp_id }}"                        # Vrrp-id for the vrouters.
        pn_pim_ssm: "{{ pn_pim_ssm }}"                        # Variable to specify pim_ssm for ebgp
        pn_bgp_redistribute: "{{ pn_bgp_redistribute }}"      # Variable to configure bgp redistribute
      register: vrouter_out                                   # Variable to hold/register output of the above tasks.
      until: vrouter_out.failed != true                       # If the above code fails it will retry the code
      retries: 3                                              # This is the retries count
      delay: 3


- name: Configure L3 VRRP with eBGP
  hosts: leaf
  tags: l3-vrrp
  serial: 1

  tasks:
    # This task is to configure VRRP for Layer 3 fabric.
    # It takes required VRRP config data from csv file.
    # It uses pn_ztp_l3_vrrp_third_party.py module from library/ directory.
    - name: Configure L3 vrrp
      pn_ztp_l3_vrrp_third_party:
        pn_spine_list: "{{ groups['third_party_spine'] }}"                   # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"                                 # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_csv_data: "{{ lookup('file', '{{ csv_file }}') }}"                # Csv file containing L3 vrrp data.
        pn_pim_ssm: "{{ pn_pim_ssm }}"                                       # Variable to specify pim_ssm for ebgp
        pn_jumbo_frames: "{{ pn_jumbo_frames }}"                             # Flag to assign mtu Default: False.
        pn_current_switch: "{{ inventory_hostname }}"                        # Name of the switch on which this task is currently getting executed.
      register: vrrp_out                                                     # Variable to hold/register output of the above tasks.
      until:  vrrp_out.failed != true                                        # If error pops up it will retry the code
      retries: 3                                                             # This is the retries count
      delay: 1

    - pause:
        seconds: 2                                                           # Pause playbook execution for specified amount of time.


- name: Configure L3 VRRP with OSPF
  hosts: leaf
  tags: l3-links
  serial: 1

  tasks:

    # This task is to configure ZTP for layer3 fabric.
    # It uses pn_ztp_l3_links_third_party.py module from library/ directory.
    # If the tasks fails then it will retry as specified by retries count.
    - name: Auto configure link IPs
      pn_ztp_l3_links_third_party:
        pn_current_switch: "{{ inventory_hostname }}"                              # Name of the switch on which this task is currently getting executed.
        pn_spine_list: "{{ groups['third_party_spine'] }}"                         # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"                                       # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_ipv4_start_address: "{{ pn_ipv4_start_address }}"                       # Ipv4 Network address required to calculate link IPs for layer3 fabric.
        pn_cidr_ipv4: "{{ pn_cidr_ipv4 }}"                                         # Ipv4 CIDR required to calculate link IPs for layer3 fabric.
        pn_subnet_ipv4: "{{ pn_subnet_ipv4 }}"                                     # Ipv4 Subnet mask required to calculate link IPs for layer3 fabric.
        pn_if_nat_realm: "{{ pn_if_nat_realm }}"                                   # Type of if_nat_realm. choices=['internal', 'external'], default='internal'
        pn_bfd: "{{ pn_bfd }}"                                                     # Flag to indicate if BFD config should be added to vrouter interfaces. Default: False.
        pn_bfd_min_rx: "{{ pn_bfd_min_rx }}"                                       # BFD-MIN-RX value required for adding BFD configuration to vrouter interfaces.
        pn_bfd_multiplier: "{{ pn_bfd_multiplier }}"                               # BFD_MULTIPLIER value required for adding BFD configuration to vrouter interfaces.
        pn_update_fabric_to_inband: "{{ pn_update_fabric_to_inband }}"             # Flag to indicate if fabric network should be updated to in-band. Default: False.
        pn_stp: "{{ pn_stp }}"                                                     # Flag to enable STP (spanning tree protocol). Default: False.
        pn_jumbo_frames: "{{ pn_jumbo_frames }}"                                   # Flag to assign mtu Default: False.
      register: ztp_l3_out                                                         # Variable to hold/register output of the above tasks.
      until:  ztp_l3_out.failed != true                                            # If error pops up it will retry the code
      retries: 3                                                                   # This is the retries count
      delay: 1

    - pause:
        seconds: 2                                                                 # Pause playbook execution for specified amount of time.

- name: Configure eBGP
  hosts: leaf[0]
  tags: bgp
  serial: 1

  tasks:
    # This task is to configure eBGP.
    # It uses pn_ztp_ebgp_third_party.py module from library/ directory.
    - name: Configure eBGP
      pn_ztp_ebgp_third_party:
        pn_spine_list: "{{ groups['third_party_spine'] }}" # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"               # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_bfd: True                                       # Indicate if BFD config should be added to eBGP. Default: False.
        pn_bgp_maxpath: "{{ pn_bgp_maxpath }}"             # BGP-MAXPATH value to be assigned to vrouters. Default: 16
        pn_ibgp_ipv4_range: "{{ pn_ibgp_ipv4_range }}"     # Ip range for creating the interfaces between leaf clusters.
        pn_ebgp_cidr_ipv4: "{{ pn_ebgp_cidr_ipv4 }}"       # subnet count for ebgp ip range
        pn_ebgp_subnet_ipv4: "{{ pn_ebgp_subnet_ipv4 }}"   # ipv4 subnet for ebgp
        pn_bgp_redistribute: "{{ pn_bgp_redistribute }}"   # BGP-REDISTRIBUTE value to be assigned to vrouters. Choices are [none, static, connected, rip, ospf]. Default: none
        pn_bgp_as_range: "{{ pn_bgp_as_range }}"           # BGP-AS-RANGE value to be assigned to vrouters. Default: 65000
        pn_ibgp_vlan: "{{ pn_ibgp_vlan }}"                 # iBGP vlan value to be assigned to vrouter interfaces. Default 4040
      register: bgp_out                                    # Variable to hold/register output of the above tasks.
      until: bgp_out.failed != true                        # If the above code fails it will retry the code
      retries: 3                                           # This is the retries count
      delay: 1

    - pause:
        seconds: 2                                         # Pause playbook execution for specified amount of time.
