---


# This task is to accept eula.
# It uses pn_eula_accept.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
- name: Zero Touch Provisioning - Eula accept
  hosts: localhost

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto accept EULA
      pn_ztp_eula_accept:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] | default([]) }}"            # List of all switches
        pn_leaf_list: "{{ groups['leaf'] | default([])}}"            # List of all switches
        pn_leaf_ips: "{{ groups['leaf'] | default('') | map('extract', hostvars, ['ansible_host']) | join(',') }}"   # IPs of all switches separated by comma
        pn_spine_ips: "{{ groups['spine'] | default('') | map('extract', hostvars, ['ansible_host']) | join(',') }}"


# This task is to configure initial ZTP setup on all switches.
# It uses pn_fabric_creation.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Initial setup
  hosts: spine, leaf
  serial: 1

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Fabric creation/join
      pn_fabric_creation:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_fabric_name: 'verizon-ztp-fabric'                   # Name of the fabric to create/join.
        pn_current_switch: "{{ inventory_hostname }}"  # Name of the switch on which this task is currently getting executed.
        pn_spine_list: "{{ groups['spine'] | default([]) }}"         # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"           # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_toggle_40g: True                          # Flag to indicate if 40g ports should be converted to 10g ports or not.
        pn_inband_ip: '172.16.1.0/24'                # Inband ips to be assigned to switches starting with this value. Default: 172.16.0.0/24.
        pn_fabric_network: 'mgmt'                    # Choices: in-band or mgmt.  Default: mgmt
        pn_fabric_control_network: 'mgmt'            # Choices: in-band or mgmt.  Default: mgmt
        pn_static_setup: True                          # Flag to indicate if static values should be assign to following switch setup params. Default: True.
        pn_mgmt_ip: "{{ ansible_host }}"               # Specify MGMT-IP value to be assign if pn_static_setup is True.
        pn_mgmt_ip_subnet: '16'                        # Specify subnet mask for MGMT-IP value to be assign if pn_static_setup is True.
        pn_gateway_ip: '10.9.9.1'                    # Specify GATEWAY-IP value to be assign if pn_static_setup is True.
        pn_dns_ip: '10.20.41.1'                      # Specify DNS-IP value to be assign if pn_static_setup is True.
        pn_dns_secondary_ip: '10.20.4.1'             # Specify DNS-SECONDARY-IP value to be assign if pn_static_setup is True.
        pn_domain_name: 'pluribusnetworks.com'       # Specify DOMAIN-NAME value to be assign if pn_static_setup is True.
        pn_ntp_server: '0.us.pool.ntp.org'           # Specify NTP-SERVER value to be assign if pn_static_setup is True.
        pn_web_api: True                             # Flag to enable web api. Default: True
        pn_stp: True                                 # Specify True if you want to enable STP at the end. Default: True.
      register: ztp_out              # Variable to hold/register output of the above tasks.
      until: ztp_out.failed != true  # If the above code fails it will retry the code
      retries: 3                     # This is the retries count
      delay: 3
      ignore_errors: yes             # Flag to indicate if we should ignore errors if any.

