#ZTP VXLAN configuration
---


# This task is to configure VXLAN full mesh.
# It uses pn_ztp_vxlan.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
- name: ZTP VXLAN configuration
  hosts: spine[0]
  gather_facts: False

  vars_files:
  - cli_vault.yml

  tasks:
    - name: ZTP Vxlan configuration
      pn_ztp_vxlan:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] | default([]) }}"   # List of spine switches
        pn_leaf_list: "{{ groups['leaf'] | default([])}}"      # List of leaf switches
        pn_tunnel_mode: 'full-mesh'                            # Flag to indicate tunnel mode type Choices: full-mesh or manual.  Default: full-mesh.
        pn_tunnel_loopback_port: '47'                          # Port to configure loopback
        pn_tunnel_vxlan_id: '4900'                             # Specify vxlan id for configuration
        pn_tunnel_overlay_vlan: '490'                          # Specify overlay vlan
      register: vxlan_config                                   # Variable to hold/register output of the above tasks.
      until: vxlan_config.failed != true                       # If the above code fails it will retry the code
      retries: 3                                               # This is the retries count
      delay: 3
      ignore_errors: yes                                       # Flag to indicate if we should ignore errors if any.

    - pause:
        seconds: 1                                             # Pause playbook execution for specified amount of time.



## This task is to configure VXLAN manual.
## It uses pn_ztp_vxlan.py module from library/ directory.
## pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
#- name: ZTP VXLAN configuration
#  hosts: spine[0]
#  gather_facts: False
#
#  vars_files:
#  - cli_vault.yml
#
#  tasks:
#    - name: ZTP Vxlan configuration
#      pn_ztp_vxlan:
#        pn_cliusername: "{{ USERNAME }}"                       # Cli username (value comes from cli_vault.yml).
#        pn_clipassword: "{{ PASSWORD }}"                       # Cli password (value comes from cli_vault.yml).
#        pn_spine_list: "{{ groups['spine'] | default([]) }}"   # List of spine switches
#        pn_leaf_list: "{{ groups['leaf'] | default([])}}"      # List of leaf switches
#        pn_tunnel_mode: 'manual'                               # Flag to indicate tunnel mode type Choices: full-mesh or manual.  Default: full-mesh.
#
#        pn_tunnel_vxlan_id: '4900'                             # Flag to indicate vxlan id/id's Default: ''
#        pn_tunnel_endpoint1: 'ansible-spine1'                  # Flag to indicate the endpoint1 of tunnel Default=[].
#        pn_tunnel_endpoint2: 'ansible-leaf1'                   # Flag to indicate the endpoint2 of tunnel Default=[].
#        pn_tunnel_overlay_vlan: '99'                          # Specify tunnel overlay vlan Default = ''.
#        pn_tunnel_loopback_port: '47'                         # Specify tunnel loopback port/ports Default = ''.
#      register: vxlan_config                                   # Variable to hold/register output of the above tasks.
#      until: vxlan_config.failed != true                       # If the above code fails it will retry the code
#      retries: 3                                               # This is the retries count
#      delay: 3
#      ignore_errors: yes                                       # Flag to indicate if we should ignore errors if any.
#
#    - pause:
#        seconds: 1                                             # Pause playbook execution for specified amount of time.



#    ## This task is to configure VXLAN manual.
#    ## It uses pn_ztp_vxlan.py module from library/ directory.
#    ## pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
#    - name: ZTP Vxlan configuration
#      pn_ztp_vxlan:
#        pn_cliusername: "{{ USERNAME }}"                       # Cli username (value comes from cli_vault.yml).
#        pn_clipassword: "{{ PASSWORD }}"                       # Cli password (value comes from cli_vault.yml).
#        pn_spine_list: "{{ groups['spine'] | default([]) }}"   # List of spine switches
#        pn_leaf_list: "{{ groups['leaf'] | default([])}}"      # List of leaf switches
#        pn_tunnel_mode: 'manual'                               # Flag to indicate tunnel mode type Choices: full-mesh or manual.  Default: full-mesh.
#        pn_tunnel_vxlan_id: '4900'                             # Flag to indicate vxlan id/id's Default: ''
#        pn_tunnel_endpoint1: 'ansible-spine2'                  # Flag to indicate the endpoint1 of tunnel.
#        pn_tunnel_endpoint2: 'ansible-spine1'                   # Flag to indicate the endpoint2 of tunnel.
#        pn_tunnel_overlay_vlan: '99'                          # Specify tunnel overlay vlan Default = ''.
#        pn_tunnel_loopback_port: '47'                         # Specify tunnel loopback port/ports Default = ''.
#      register: vxlan_config                                   # Variable to hold/register output of the above tasks.
#      until: vxlan_config.failed != true                       # If the above code fails it will retry the code
#      retries: 3                                               # This is the retries count
#      delay: 3
#      ignore_errors: yes                                       # Flag to indicate if we should ignore errors if any.
#
#    - pause:
#        seconds: 1                                             # Pause playbook execution for specified amount of time.
#
