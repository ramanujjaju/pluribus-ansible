---


# This task is to accept eula.
# It uses pn_eula_accept.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
- name: Zero Touch Provisioning - Eula accept
  hosts: localhost

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto accept EULA
      pn_ztp_eula_accept:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] | default([]) }}"            # List of all switches
        pn_leaf_list: "{{ groups['leaf'] | default([])}}"            # List of all switches
        pn_leaf_ips: "{{ groups['leaf'] | default('') | map('extract', hostvars, ['ansible_host']) | join(',') }}"   # IPs of all switches separated by comma
        pn_spine_ips: "{{ groups['spine'] | default('') | map('extract', hostvars, ['ansible_host']) | join(',') }}"


# This task is to configure initial ZTP setup on all switches.
# It uses pn_initial_ztp.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Initial setup
  hosts: all
  serial: 1

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto accept EULA, Disable STP, enable ports and create/join fabric
      pn_ztp_initial_setup:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_fabric_name: 'ansible-ospf-fabric'           # Name of the fabric to create/join.
        pn_current_switch: "{{ inventory_hostname }}"  # Name of the switch on which this task is currently getting executed.
        pn_spine_list: "{{ groups['spine'] }}"         # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"           # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_toggle_port_speed: True                     # Flag to indicate if 40g/100g ports should be converted to 10g/25g ports or not.
        pn_inband_ip: '172.16.1.0/24'                  # Inband ips to be assigned to switches starting with this value. Default: 172.16.0.0/24.
        pn_fabric_network: 'mgmt'                      # Choices: in-band or mgmt.  Default: mgmt
        pn_fabric_control_network: 'mgmt'              # Choices: in-band or mgmt.  Default: mgmt
        pn_static_setup: False                         # Flag to indicate if static values should be assign to following switch setup params. Default: True.
        pn_mgmt_ip: "{{ ansible_host }}"               # Specify MGMT-IP value to be assign if pn_static_setup is True.
        pn_mgmt_ip_subnet: '16'                        # Specify subnet mask for MGMT-IP value to be assign if pn_static_setup is True.
        pn_gateway_ip: '10.9.9.1'                      # Specify GATEWAY-IP value to be assign if pn_static_setup is True.
        pn_dns_ip: '10.20.41.1'                        # Specify DNS-IP value to be assign if pn_static_setup is True.
        pn_dns_secondary_ip: '10.20.4.1'               # Specify DNS-SECONDARY-IP value to be assign if pn_static_setup is True.
        pn_domain_name: 'pluribusnetworks.com'         # Specify DOMAIN-NAME value to be assign if pn_static_setup is True.
        pn_ntp_server: '0.us.pool.ntp.org'             # Specify NTP-SERVER value to be assign if pn_static_setup is True.
        pn_web_api: True                               # Flag to enable web api. Default: True
        pn_stp: False                                  # Specify True if you want to enable STP at the end. Default: False.
        pn_autotrunk: "disable"                        # Specify enable/disable auto-trunk setting. Default: disable
        pn_autoneg: False                              # Flag to toggle auto-neg ON/OFF if the setup contains T2+ leaf switches. Default: False
      register: ztp_out                                # Variable to hold/register output of the above tasks.
      until: ztp_out.failed != true                    # If the above code fails it will retry the code
      retries: 3                                       # This is the retries count
      delay: 3
      ignore_errors: yes                               # Flag to indicate if we should ignore errors if any.

    - pause:
        seconds: 2                                     # Pause playbook execution for specified amount of time.


# This task is to configure VRRP for Layer 3 using csv lookup.
# It takes required VRRP config data from csv file.
# Specify the correct 'csv_file' path under vars section.
# It uses pn_ztp_vrrp_l3.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Virtual Router Redundancy Protocol (VRRP) - Layer 3 Setup
  hosts: spine[0]

  vars_files:
  - cli_vault.yml

#  vars:
#  - csv_file: /etc/ansible/pluribus-ansible/ansible/examples/ztp_l3_vrrp.csv  # CSV file path

  tasks:
    - name: Configure VRRP L3 setup
      pn_ztp_l3_vrrp:
        pn_cliusername: "{{ USERNAME }}"               # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"               # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] }}"         # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"           # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_csv_data: "{{ lookup('file', '{{ csv_file }}') }}"  # VRRP Layer3 data specified in CSV file.
      register: vrrp_out                               # Variable to hold/register output of the above tasks.
      until:  vrrp_out.failed != true                  # If error pops up it will retry the code
      retries: 3                                       # This is the retries count
      delay: 1
      ignore_errors: yes                               # Flag to indicate if we should ignore errors if any.

    - pause:
        seconds: 2                                     # Pause playbook execution for specified amount of time.


# This task is to configure ZTP layer 3 setup.
# It uses pn_l3_ztp.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Layer3 setup
  hosts: spine[0]

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Auto configure link IPs
      pn_ztp_l3_links:
        pn_cliusername: "{{ USERNAME }}"        # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"        # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] }}"  # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"    # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_net_address: '172.168.1.0'           # Network address required to calculate link IPs for layer3 fabric.
        pn_cidr: '24'                           # Subnet mask required to calculate link IPs for layer3 fabric.
        pn_supernet: '30'                       # Supernet mask required to calculate link IPs for layer3 fabric.
        pn_loopback_ip: '109.109.109.0/24'      # Loopback ip value for vrouters in layer3 fabric. Default: 109.109.109.0/24.
        pn_bfd: True                            # Flag to indicate if BFD config should be added to vrouter interfaces in case of layer3 fabric. Default: False.
        pn_bfd_min_rx: 200                      # BFD-MIN-RX value required for adding BFD configuration to vrouter interfaces.
        pn_bfd_multiplier: 3                    # BFD_MULTIPLIER value required for adding BFD configuration to vrouter interfaces.
        pn_update_fabric_to_inband: False       # Flag to indicate if fabric network should be updated to in-band. Default: False.
        pn_stp: True                            # Flag to enable STP. Default: True.
      register: ztp_l3_out                      # Variable to hold/register output of the above tasks.
      until:  ztp_l3_out.failed != true         # If error pops up it will retry the code
      retries: 3                                # This is the retries count
      delay: 1
      ignore_errors: yes                        # Flag to indicate if we should ignore errors if any.

    - pause:
        seconds: 2                              # Pause playbook execution for specified amount of time.


# This task is to configure OSPF.
# It uses pn_ztp_bgp_ospf.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - OSPF setup
  hosts: spine[0]

  vars_files:
  - cli_vault.yml

  tasks:
    - name: Configure OSPF
      pn_ztp_bgp_ospf:
        pn_cliusername: "{{ USERNAME }}"                   # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"                   # Cli password (value comes from cli_vault.yml).
        pn_spine_list: "{{ groups['spine'] }}"             # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"               # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_bfd: True                                       # Flag to indicate if BFD config should be added to eBGP/ospf. Default: False.
        pn_routing_protocol: 'ospf'                        # Routing protocol to configure. Choices are ['ebgp', 'ospf']
        pn_ospf_area_id: '0'                               # Area id to configure for ospf. Default: 0
        pn_iospf_ip_range: '75.75.75.0/24'                 # Ip range for creating the interface between leaf clusters. Default:'75.75.75.0/24'
        pn_iospf_vlan: '4040'                              # Vlan for creating the interface between leaf clusters. Default:'4040'
        pn_area_configure_flag: 'singlearea'               # Choice to configure area id amongst different leaf spine switches. Choices=['singlearea', 'dualarea', 'multiarea'] . Default: 'singlearea'
      register: ospf_out                                   # Variable to hold/register output of the above tasks.
      until: ospf_out.failed != true                       # If the above code fails it will retry the code
      retries: 3                                           # This is the retries count
      delay: 1
      ignore_errors: yes                                   # Flag to indicate if we should ignore errors if any.

    - pause:
        seconds: 2                                         # Pause playbook execution for specified amount of time.
